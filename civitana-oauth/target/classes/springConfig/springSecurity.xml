<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<http pattern="/sec/**" create-session="never" 
		entry-point-ref="oauthAuthenticationEntryPoint"
		use-expressions="true">
		
		<anonymous enabled="false" />
		<intercept-url pattern="/sec/**" method="GET" access="hasRole('ROLE_ADMIN') and #oauth2.hasScope('read')" />
		<custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER" />
		<access-denied-handler ref="oauthAccessDeniedHandler" />
		<expression-handler ref="oauthWebExpressionHandler" />  
	</http>

	<oauth:web-expression-handler id="oauthWebExpressionHandler" />
	
	<http pattern="/oauth/token" create-session="stateless"
		authentication-manager-ref="clientAuthenticationManager">
		
		<anonymous enabled="false" />
		<http-basic entry-point-ref="clientAuthenticationEntryPoint" />
		<access-denied-handler ref="oauthAccessDeniedHandler" />
	</http>
	
	
	<beans:bean id="clientAuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<beans:property name="typeName" value="Basic"/>
	</beans:bean>	
	
	 <beans:bean id="oauthAuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
	</beans:bean>
	
	<beans:bean id="oauthAccessDeniedHandler"
		class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"/>
	
    <beans:bean id="clientCredentialsTokenEndpointFilter"  
          class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">  
        <beans:property name="authenticationManager" ref="clientAuthenticationManager"/>  
    </beans:bean>  
      
    <authentication-manager id="clientAuthenticationManager">  
        <authentication-provider user-service-ref="client-details-user-service">
        	<!-- password-encoder hash="sha-256"/ -->
        </authentication-provider>  
    </authentication-manager>

	<beans:bean id="userService" class="org.civitana.oauth.UserServiceImpl"/>
	<authentication-manager alias="userAuthenticationManager">
		<authentication-provider user-service-ref="userService">
			<!-- 
			<user-service>
				<user authorities="ROLE_ADMIN" name="admin" password="admin" />
			</user-service>
			-->
		</authentication-provider>
	</authentication-manager>
 
    <beans:bean id="client-details-user-service" class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">  
        <beans:constructor-arg ref="client-details-service" />  
    </beans:bean>  
    	
	<beans:bean id="tokenStore"
		class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore" />

	<beans:bean id="tokenServices"
		class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<beans:property name="tokenStore" ref="tokenStore" />
		<beans:property name="supportRefreshToken" value="true" />
		<beans:property name="clientDetailsService" ref="client-details-service" />
	</beans:bean>

    <oauth:client-details-service id="client-details-service" >  
            <oauth:client   
				client-id="353b302c44574f565045687e534e7d6a"  
				secret="286924697e615a672a646a493545646c"  
				authorized-grant-types="password,refresh_token"
				scope="read"  
				authorities="ROLE_ADMIN"  
				access-token-validity="60"  
				refresh-token-validity="60"/>
    </oauth:client-details-service>  
    
	<oauth:authorization-server
		client-details-service-ref="client-details-service"
		token-services-ref="tokenServices">
		<oauth:refresh-token />
		<oauth:password />
	</oauth:authorization-server>

    <oauth:resource-server id="resourceServerFilter" token-services-ref="tokenServices"/>
    
</beans:beans>